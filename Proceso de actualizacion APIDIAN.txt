PROCEDIMIENTO DE ACTUALIZACION APIDIAN

1... DESDE APIDIAN2021 o APIDIAN2022 o APIDIAN2023 HACIA APIDIAN2O24

Dentro del directorio del apidian2021 o apidian2022 o apidian2023:

	   git config --global http.sslverify false
	a. git remote remove origin
	b. git remote add origin https://gitlab.buho.la/facturalatam/co-apidian2024.git
	c. nano .git/config
		Debe quedar dicho archivo de la siguiente manera, si falta algo, agregarlo manualmente
		
			[core]
				repositoryformatversion = 0
				filemode = false
				bare = false
				logallrefupdates = true
				symlinks = false
				ignorecase = true
			[remote "origin"]
				url = https://gitlab.buho.la/facturalatam/co-apidian2024.git
				fetch = +refs/heads/*:refs/remotes/origin/*
			[branch "master"]
				remote = origin
				merge = refs/heads/master
		
	d. git pull 
	e. git pull origin master 
	e. Si aparecen conflictos ejecutar el comando: git reset --hard origin/master
	f. php artisan migrate --seed
	g. composer clear-cache
	h. composer self-update
	i. rm composer.lock
	j. composer install
	k. unzip storage.zip
	l. chmod -R 777 storage
	m. chmod -R 777 bootstrap/cache
	n. chmod -R 777 vendor/mpdf/mpdf
	o. php artisan config:cache && php artisan config:clear && php artisan cache:clear
	p. chmod 700 urn_on.sh
	q. ./urn_on.sh
	
	
2... ACTUALIZAR APIDIAN2024

Dentro del directorio del apidian2024:

	a. git pull 
	b. git pull origin master 
	c. Si aparecen conflictos ejecutar el comando: git reset --hard origin/master
	d. php artisan migrate --seed
	e. composer clear-cache
	f. composer self-update
	g. rm composer.lock
	h. composer install
	i. unzip storage.zip
	j. chmod -R 777 storage
	k. chmod -R 777 bootstrap/cache
	l. chmod -R 777 vendor/mpdf/mpdf
	m. php artisan config:cache && php artisan config:clear && php artisan cache:clear
	p. chmod 700 urn_on.sh
	q. ./urn_on.sh
